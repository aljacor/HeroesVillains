@model HeroesVillains.Models.Character

@{
    ViewBag.Title = "CharacterDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div style="margin-top:25px;" class="main-body" s>
    <div class="row justify-content-center  gutters-sm">
        <div style="flex-basis: content;" class="col-xxl-2 col-lg-4 col-md-6 col-sm-12">
            <div class="profile-card" style="margin:0;">
                <img src=@Model.Image.Url class="img img-fluid">
                <div class="profile-name">@Model.Name</div>
                <div class="profile-side">@(Model.Biography.Alignment == "good" ? "Superhero" :"Villian")</div>
                <div class="profile-realname">@Model.Biography.FullName</div>
                <div class="profile-gender">Gender: @Model.Appearance.Gender</div>
            </div>
        </div>
        <div class="col-xxl-5 col-lg-4 col-md-6 col-sm-12">
            <div class="card mb-3">
                <div class="card-body">
                    <h3 class="d-flex align-items-center mb-3">
                        <i class="material-icons mr-2">Details of @Model.Name</i>
                    </h3>
                    <div class="row">
                        <div class="col-sm-5">
                            <h6 class="mb-0">Full Name</h6>
                        </div>
                        <div class="col-sm-7 text-secondary">
                            @(Model.Biography.FullName)
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-5">
                            <h6 class="mb-0">Race</h6>
                        </div>
                        <div class="col-sm-7 text-secondary">
                            @(Model.Appearance.Race != "null" ? Model.Appearance.Race  : "unknown")
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-5">
                            <h6 class="mb-0">Place of birth</h6>
                        </div>
                        <div class="col-sm-7 text-secondary">
                            @(Model.Biography.PlaceOfBirth != "null" ? Model.Biography.PlaceOfBirth : "unknown")
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-sm-5">
                            <h6 class="mb-0">First-appearance</h6>
                        </div>
                        <div class="col-sm-7 text-secondary">
                            @(Model.Biography.FirstAppearance)
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-5">
                            <h6 class="mb-0">Publisher</h6>
                        </div>
                        <div class="col-sm-7 text-secondary">
                            @(Model.Biography.Publisher)
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-5">
                            <h6 class="mb-0">Alignment</h6>
                        </div>
                        <div class="col-sm-7 text-secondary">
                            @(Model.Biography.Alignment)
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-5">
                            <h6 class="mb-0">Alter-egos</h6>
                        </div>
                        <div class="col-sm-7 text-secondary">
                            @(Model.Biography.AlterEgos)
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-5">
                            <h6 class="mb-0">Aliases</h6>
                        </div>
                        <div class="col-sm-7 text-secondary">
                            @foreach (string aliases in @Model.Biography.Aliases)
                            {
                                <span>@(aliases + " - ")</span>;
                            }
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-5">
                            <h6 class="mb-0">Group affiliation</h6>
                        </div>
                        <div class="col-sm-7 text-secondary">
                            @(Model.Connections.GroupAffiliation)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xxl-5 col-lg-4 col-md-12 mb-3">
            <div class="card h-100">
                <div class="card-body">
                    <canvas id="myChart"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="container" style="background-color:#FFF">
        
    </div>

</div>

@section Scripts{
    <script>
        const labels = [
            'Intelligence',
            'Strength',
            'Speed',
            'Durability',
            'Power',
            'Combat',
        ];

        const data = {
            labels: labels,
            datasets: [{
                label: 'Powerstats',
                borderColor: @Html.Raw(Model.Biography.Alignment == "good" ? "'rgb(184, 36, 26)'" : "'rgb(53, 56, 222)'"),
                data: [
                    @Html.Raw(Model.Powerstats.Intelligence != "null" ? int.Parse(Model.Powerstats.Intelligence) : 0),
                    @Html.Raw(Model.Powerstats.Strength != "null" ? int.Parse(Model.Powerstats.Strength) : 0),
                    @Html.Raw(Model.Powerstats.Speed != "null" ? int.Parse(Model.Powerstats.Speed) : 0),
                    @Html.Raw(Model.Powerstats.Durability != "null" ? int.Parse(Model.Powerstats.Durability) : 0),
                    @Html.Raw(Model.Powerstats.Power != "null" ? int.Parse(Model.Powerstats.Power) : 0),
                    @Html.Raw(Model.Powerstats.Combat != "null" ? int.Parse(Model.Powerstats.Combat) : 0),
                ],
            }]
        };

        const config = {
            type: 'radar',
            data: data,
            options: {}
        };
    </script>

    <script>

        const myChart = new Chart(
            document.getElementById('myChart'),
            config
        );
    </script>
}